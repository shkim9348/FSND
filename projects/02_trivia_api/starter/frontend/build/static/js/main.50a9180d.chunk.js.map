{"version":3,"sources":["logo.svg","components/FormView.js","components/Question.js","components/Search.js","components/QuestionView.js","components/Header.js","components/QuizView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FormView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitQuestion","event","preventDefault","$","ajax","url","type","dataType","contentType","data","JSON","stringify","question","state","answer","difficulty","category","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","setState","error","alert","handleChange","defineProperty","target","name","value","categories","_this2","_this3","react_default","a","createElement","id","className","onSubmit","onChange","keys","map","key","Component","Question","visibleAnswer","_this$props","src","concat","toLowerCase","onClick","questionAction","flipVisibility","style","visibility","Search","query","getInfo","submitSearch","handleInputChange","search","placeholder","ref","input","QuestionView","getQuestions","page","questions","totalQuestions","total_questions","currentCategory","current_category","getByCategory","searchTerm","action","window","confirm","filter","q","num","pageNumbers","maxPage","Math","ceil","_loop","i","push","selectPage","_this4","components_Search","ind","components_Question","createPagination","Header","uri","location","href","origin","navTo","QuizView","selectCategory","_ref","_ref$id","quizCategory","getNextQuestion","previousQuestions","toConsumableArray","currentQuestion","previous_questions","quiz_category","showAnswer","guess","forceEnd","submitGuess","replace","evaluate","evaluateAnswer","numCorrect","restartGame","formatGuess","split","every","el","includes","length","renderFinalScore","renderCorrectAnswer","renderPlay","renderPrePlay","App","components_Header","path","react_router_dom","react_router","exact","component","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.50a9180d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport $ from 'jquery';\n\nimport '../stylesheets/FormView.css';\n\nclass FormView extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      question: \"\",\n      answer: \"\",\n      difficulty: 1,\n      category: 1,\n      categories: {}\n    }\n  }\n\n  componentDidMount(){\n    $.ajax({\n      url: `https://api2.ver.team/categories`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({ categories: result.categories })\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again')\n      }\n    })\n  }\n\n\n  submitQuestion = (event) => {\n    event.preventDefault();\n    $.ajax({\n      url: 'https://api2.ver.team/questions', //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        question: this.state.question,\n        answer: this.state.answer,\n        difficulty: this.state.difficulty,\n        category: this.state.category\n      }),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        document.getElementById(\"add-question-form\").reset();\n        // fix. reset state\n        this.setState({\n          question: \"\",\n          answer: \"\",\n          difficulty: 1,\n          category: 1,\n        });\n      },\n      error: (error) => {\n        alert('Unable to add question. Please try your request again')\n      }\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  render() {\n    return (\n      <div id=\"add-form\">\n        <h2>Add a New Trivia Question</h2>\n        <form className=\"form-view\" id=\"add-question-form\" onSubmit={this.submitQuestion}>\n          <label>\n            Question\n            <input type=\"text\" name=\"question\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Answer\n            <input type=\"text\" name=\"answer\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Difficulty\n            <select name=\"difficulty\" onChange={this.handleChange}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </label>\n          <label>\n            Category\n            <select name=\"category\" onChange={this.handleChange}>\n              {Object.keys(this.state.categories).map(id => {\n                  return (\n                    <option key={id} value={id}>{this.state.categories[id]}</option>\n                  )\n                })}\n            </select>\n          </label>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default FormView;\n","import React, { Component } from 'react';\nimport '../stylesheets/Question.css';\n\nclass Question extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      visibleAnswer: false\n    }\n  }\n\n  flipVisibility() {\n    this.setState({visibleAnswer: !this.state.visibleAnswer});\n  }\n\n  render() {\n    const { question, answer, category, difficulty } = this.props;\n    return (\n      <div className=\"Question-holder\">\n        <div className=\"Question\">{question}</div>\n        <div className=\"Question-status\">\n          <img className=\"category\" src={`${category.toLowerCase()}.svg`}/>\n          <div className=\"difficulty\">Difficulty: {difficulty}</div>\n          <img src=\"delete.png\" className=\"delete\" onClick={() => this.props.questionAction('DELETE')}/>\n          \n        </div>\n        <div className=\"show-answer button\"\n            onClick={() => this.flipVisibility()}>\n            {this.state.visibleAnswer ? 'Hide' : 'Show'} Answer\n          </div>\n        <div className=\"answer-holder\">\n          <span style={{\"visibility\": this.state.visibleAnswer ? 'visible' : 'hidden'}}>Answer: {answer}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Question;\n","import React, { Component } from 'react'\n\nclass Search extends Component {\n  state = {\n    query: '',\n  }\n\n  getInfo = (event) => {\n    event.preventDefault();\n    this.props.submitSearch(this.state.query)\n  }\n\n  handleInputChange = () => {\n    this.setState({\n      query: this.search.value\n    })\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.getInfo}>\n        <input\n          placeholder=\"Search questions...\"\n          ref={input => this.search = input}\n          onChange={this.handleInputChange}\n        />\n        <input type=\"submit\" value=\"Submit\" className=\"button\"/>\n      </form>\n    )\n  }\n}\n\nexport default Search\n","import React, { Component } from 'react';\n\nimport '../stylesheets/App.css';\nimport Question from './Question';\nimport Search from './Search';\nimport $ from 'jquery';\n\nclass QuestionView extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      questions: [],\n      page: 1,\n      totalQuestions: 0,\n      categories: {},\n      currentCategory: null,\n    }\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  getQuestions = () => {\n    $.ajax({\n      url: `https://api2.ver.team/questions?page=${this.state.page}`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          categories: result.categories,\n          currentCategory: result.current_category\n        })\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n      }\n    })\n  }\n\n  selectPage(num) {\n    this.setState({page: num}, () => this.getQuestions());\n  }\n\n  createPagination(){\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalQuestions / 10)\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(\n        <span\n          key={i}\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\n          onClick={() => {this.selectPage(i)}}>{i}\n        </span>)\n    }\n    return pageNumbers;\n  }\n\n  getByCategory= (id) => {\n    $.ajax({\n      url: `https://api2.ver.team/categories/${id}/questions`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category\n        })\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n      }\n    })\n  }\n\n  submitSearch = (searchTerm) => {\n    $.ajax({\n      url: `https://api2.ver.team/questions/search`, //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({searchTerm: searchTerm}),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          questions: result.questions,\n          totalQuestions: result.total_questions,\n          currentCategory: result.current_category\n        })\n      },\n      error: (error) => {\n        alert('Unable to load questions. Please try your request again')\n      }\n    })\n  }\n\n  questionAction = (id) => (action) => {\n    if(action === 'DELETE') {\n      if(window.confirm('are you sure you want to delete the question?')) {\n        $.ajax({\n          url: `https://api2.ver.team/questions/${id}`, //TODO: update request URL\n          type: \"DELETE\",\n          success: (result) => {\n            // this.getQuestions();\n            // just update state rather then refetch data\n            this.setState({\n              questions: this.state.questions.filter(q => !(q.id === id))\n            });\n          },\n          error: (error) => {\n            alert('Unable to load questions. Please try your request again')\n          }\n        })\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"question-view\">\n        <div className=\"categories-list\">\n          <h2 onClick={() => {this.getQuestions()}}>Categories</h2>\n          <ul>\n            {Object.keys(this.state.categories).map((id, ) => (\n              <li key={id} onClick={() => {this.getByCategory(id)}}>\n                {this.state.categories[id]}\n                <img className=\"category\" src={`${this.state.categories[id].toLowerCase()}.svg`}/>\n              </li>\n            ))}\n          </ul>\n          <Search submitSearch={this.submitSearch}/>\n        </div>\n        <div className=\"questions-list\">\n          <h2>Questions</h2>\n          {this.state.questions.map((q, ind) => (\n            <Question\n              key={q.id}\n              question={q.question}\n              answer={q.answer}\n              category={this.state.categories[q.category]}\n              difficulty={q.difficulty}\n              questionAction={this.questionAction(q.id)}\n            />\n          ))}\n          <div className=\"pagination-menu\">\n            {this.createPagination()}\n          </div>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default QuestionView;\n","import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport '../stylesheets/Header.css';\n\nclass Header extends Component {\n\n  navTo(uri){\n    window.location.href = window.location.origin + uri;\n  }\n\n  render() {\n    return (\n      <div className=\"App-header\">\n        <h1 onClick={() => {this.navTo('')}}>Udacitrivia</h1>\n        <h2 onClick={() => {this.navTo('')}}>List</h2>\n        <h2 onClick={() => {this.navTo('/add')}}>Add</h2>\n        <h2 onClick={() => {this.navTo('/play')}}>Play</h2>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport $ from 'jquery';\n\nimport '../stylesheets/QuizView.css';\n\nconst questionsPerPlay = 5;\n\nclass QuizView extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        quizCategory: null,\n        previousQuestions: [],\n        showAnswer: false,\n        categories: {},\n        numCorrect: 0,\n        currentQuestion: {},\n        guess: '',\n        forceEnd: false\n    }\n  }\n\n  componentDidMount(){\n    $.ajax({\n      url: `https://api2.ver.team/categories`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({ categories: result.categories })\n      },\n      error: (error) => {\n        alert('Unable to load categories. Please try your request again')\n      }\n    })\n  }\n\n  selectCategory = ({type, id=0}) => {\n    this.setState({quizCategory: {type, id}}, this.getNextQuestion)\n  }\n\n  handleChange = (event) => {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  getNextQuestion = () => {\n    const previousQuestions = [...this.state.previousQuestions]\n    if(this.state.currentQuestion.id) { previousQuestions.push(this.state.currentQuestion.id) }\n\n    $.ajax({\n      url: 'https://api2.ver.team/quizzes', //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        previous_questions: previousQuestions,\n        quiz_category: this.state.quizCategory\n      }),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          showAnswer: false,\n          previousQuestions: previousQuestions,\n          currentQuestion: result.question,\n          guess: '',\n          forceEnd: result.question ? false : true\n        })\n      },\n      error: (error) => {\n        alert('Unable to load question. Please try your request again')\n      }\n    })\n  }\n\n  submitGuess = (event) => {\n    event.preventDefault();\n    const formatGuess = this.state.guess.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").toLowerCase()\n    const evaluate =  this.evaluateAnswer()\n    this.setState({\n      numCorrect: !evaluate ? this.state.numCorrect : this.state.numCorrect + 1,\n      showAnswer: true,\n    })\n  }\n\n  restartGame = () => {\n    this.setState({\n      quizCategory: null,\n      previousQuestions: [],\n      showAnswer: false,\n      numCorrect: 0,\n      currentQuestion: {},\n      guess: '',\n      forceEnd: false\n    })\n  }\n\n  renderPrePlay(){\n      return (\n          <div className=\"quiz-play-holder\">\n              <div className=\"choose-header\">Choose Category</div>\n              <div className=\"category-holder\">\n                  <div className=\"play-category\" onClick={this.selectCategory}>ALL</div>\n                  {Object.keys(this.state.categories).map(id => {\n                  return (\n                    <div\n                      key={id}\n                      value={id}\n                      className=\"play-category\"\n                      onClick={() => this.selectCategory({type:this.state.categories[id], id})}>\n                      {this.state.categories[id]}\n                    </div>\n                  )\n                })}\n              </div>\n          </div>\n      )\n  }\n\n  renderFinalScore(){\n    return(\n      <div className=\"quiz-play-holder\">\n        <div className=\"final-header\"> Your Final Score is {this.state.numCorrect}</div>\n        <div className=\"play-again button\" onClick={this.restartGame}> Play Again? </div>\n      </div>\n    )\n  }\n\n  evaluateAnswer = () => {\n    const formatGuess = this.state.guess.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").toLowerCase()\n    const answerArray = this.state.currentQuestion.answer.toLowerCase().split(' ');\n    return answerArray.every(el => formatGuess.includes(el));\n  }\n\n  renderCorrectAnswer(){\n    const formatGuess = this.state.guess.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g,\"\").toLowerCase()\n    const evaluate =  this.evaluateAnswer()\n    return(\n      <div className=\"quiz-play-holder\">\n        <div className=\"quiz-question\">{this.state.currentQuestion.question}</div>\n        <div className={`${evaluate ? 'correct' : 'wrong'}`}>{evaluate ? \"You were correct!\" : \"You were incorrect\"}</div>\n        <div className=\"quiz-answer\">{this.state.currentQuestion.answer}</div>\n        <div className=\"next-question button\" onClick={this.getNextQuestion}> Next Question </div>\n      </div>\n    )\n  }\n\n  renderPlay(){\n    return this.state.previousQuestions.length === questionsPerPlay || this.state.forceEnd\n      ? this.renderFinalScore()\n      : this.state.showAnswer\n        ? this.renderCorrectAnswer()\n        : (\n          <div className=\"quiz-play-holder\">\n            <div className=\"quiz-question\">{this.state.currentQuestion.question}</div>\n            <form onSubmit={this.submitGuess}>\n              <input type=\"text\" name=\"guess\" onChange={this.handleChange}/>\n              <input className=\"submit-guess button\" type=\"submit\" value=\"Submit Answer\" />\n            </form>\n          </div>\n        )\n  }\n\n\n  render() {\n    return this.state.quizCategory\n        ? this.renderPlay()\n        : this.renderPrePlay()\n  }\n}\n\nexport default QuizView;\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom'\n\n// import logo from './logo.svg';\nimport './stylesheets/App.css';\nimport FormView from './components/FormView';\nimport QuestionView from './components/QuestionView';\nimport Header from './components/Header';\nimport QuizView from './components/QuizView';\n\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"App\">\n      <Header path />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={QuestionView} />\n          <Route path=\"/add\" component={FormView} />\n          <Route path=\"/play\" component={QuizView} />\n          <Route component={QuestionView} />\n        </Switch>\n      </Router>\n    </div>\n  );\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n //\"start\": \"HOST='127.0.0.1' PORT='5000' react-scripts start\",\n"],"sourceRoot":""}