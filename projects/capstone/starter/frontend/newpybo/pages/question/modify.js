import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useRef } from "react";
import useSWRMutation from "swr/mutation";
import { useAuthToken } from "@/contexts/context";
import QuestionForm from "@/components/questionForm";

export default function Modify() {
  // auth
  const accessToken = useAuthToken();

  // router
  const router = useRouter();

  // ref
  const formRef = useRef();

  // remote mutate
  const {
    data: question,
    trigger: modifyQuestion,
    error,
  } = useSWRMutation(
    `${process.env.API_URL}/question/${router.query.id}`,
    async (url, { arg }) => {
      const question = await fetch(url, {
        method: arg ? "PUT" : "GET",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${accessToken}`,
        },
        body: arg,
      })
        .then((res) => res.json())
        .then((data) => data);

      if (!arg || question.errors) {
        return question;
      }

      // redirect
      router.push(`/question?id=${router.query.id}`);
    },
  );

  // fetch question
  useEffect(() => {
    if (accessToken) modifyQuestion();
  }, [accessToken]);

  // modify question
  const handleModifyQuestion = async (e) => {
    e.preventDefault();

    const formDate = new FormData(formRef.current);
    modifyQuestion(
      JSON.stringify({
        subject: formDate.get("subject"),
        content: formDate.get("content"),
      }),
    );
  };

  if (error) return <div>Failed to load</div>;
  if (!question) return <div></div>;

  return (
    <>
      <Head>
        <title>{question.subject}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <QuestionForm
          question={question}
          errors={question && question.errors}
          formRef={formRef}
          onClick={handleModifyQuestion}
        />
      </main>
    </>
  );
}
